Scenario –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––

You work for a pizza delivery company that needs a program to calculate order costs. The company has specific pricing rules:

• Pizza sizes and base prices:
    • Small pizza: $8
    • Large pizza: $12
• Toppings: $1 for each additional topping
• Delivery fee:
    • $2 for the first 5 miles
    • $1 for each additional mile

Your task: Create a Python script that prompts the user for order details, calculates the total cost, and displays the result.

Lab Instructions –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––

Step 1: Define the Problem 

Create a Python script named pizza_order_cost.py that calculates the total cost of a pizza order based on:
• Pizza size
• Number of toppings
• Delivery distance

Step 2: Design a Solution

Design a solution using pseudocode. Use the following steps as a guide:

1. Prompt the user for inputs:
    • Pizza size (small or large)
    • Number of toppings
    • Delivery distance in miles
2. Calculate the base cost of the pizza using conditional statements.
3. Calculate the cost of toppings.
4. Calculate the delivery fee.
5. Sum up the total cost.
6. Display the result using an f-string.

Step 3: Implement the Solution

Using your pseudocode design, write the Python code to implement your solution. Open your favorite Python editor and create a new file named pizza_order_cost.py. Then, follow these steps:

1. Start by adding comments to outline the structure of your program.
2. Implement the user input section, using input() function and appropriate type conversion.
3. Use if-elif statements to determine the base cost of the pizza.
4. Calculate the cost of toppings.
5. Implement the delivery fee calculation.
6. Calculate the total cost.
7. Use an f-string to display the result.

Step 3: Test and Debug

After implementing your solution:

1. Run your script and test it with various inputs to ensure it works correctly
2. Check for edge cases, such as:
    • Ordering a pizza with no extra toppings.
    • Ordering for pickup (0 miles delivery distance).
    • Ordering a large pizza with many toppings and long delivery distance.
3. If you encounter any errors or unexpected results, debug your code and make necessary adjustments.